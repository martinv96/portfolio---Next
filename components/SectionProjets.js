import { useState } from "react";
import { motion, AnimatePresence } from "framer-motion";
import Image from "next/image";

const projects = [
  {
    id: "easydealz",
    title: "EasyDealz",
    description: "Plateforme de bons plans d√©velopp√©e avec Symfony et React.",
    imgSrc: "/easydealz.JPG",
    details: (
      <>
        <p>
          EasyDealz est une application e-commerce d√©velopp√©e avec Symfony, offrant une structure
          back-end robuste, une base de donn√©es MySQL, une gestion s√©curis√©e des utilisateurs et
          des produits, et une interface moderne.
        </p>
        <ul className="list-disc ml-5 space-y-2 text-sm mt-4">
          <li><strong>Framework :</strong> Symfony 7.1.*</li>
          <li><strong>Base de donn√©es :</strong> MySQL</li>
          <li><strong>Langages :</strong> PHP, HTML, CSS, JavaScript</li>
          <li><strong>Syst√®me de templates :</strong> Twig</li>
          <li><strong>Stockage des images :</strong> Upload local</li>
          <li><strong>Entit√©s :</strong> User, Product, Cart, Order‚Ä¶</li>
          <li><strong>Fonctionnalit√©s utilisateur :</strong> Authentification, profil</li>
          <li><strong>D√©ploiement :</strong> Docker, Render, Railway</li>
        </ul>
      </>
    ),
  },
  {
    id: "teona",
    title: "Teona Passenger",
    description: "Application de gestion de passagers avec API REST Symfony et React.",
    imgSrc: "/teona.JPG",
    details: (
      <>
        <p>
          Teona Passenger est une application de comparaison de prix dans le domaine du tourisme
          (vols, h√©bergements, h√¥tels, etc.). Le projet est d√©velopp√© en React, avec une interface
          unifi√©e pour toutes les cat√©gories, une barre de recherche dynamique, et une attention
          particuli√®re port√©e √† l‚Äôexp√©rience utilisateur, √† la responsivit√© et √† la performance.
        </p>
        <ul className="list-disc ml-5 space-y-2 text-sm mt-4">
          <li><strong>Framework Front-end :</strong> React (Vite)</li>
          <li><strong>Organisation :</strong> components/, pages/, style/</li>
          <li><strong>Langages :</strong> JavaScript, HTML5, CSS (TailwindCSS)</li>
          <li><strong>Donn√©es :</strong> API fictive ou √† venir</li>
          <li><strong>Routage :</strong> React Router</li>
          <li><strong>Fonctionnalit√©s utilisateur :</strong> Navigation fluide, recherche dynamique, SPA, responsive</li>
          <li><strong>Comparaison :</strong> R√©sultats simul√©s, filtres/tris pr√©vus</li>
          <li><strong>Interface :</strong> Design moderne, responsive, composants r√©utilisables</li>
          <li><strong>Police :</strong> Inter (Google Fonts)</li>
          <li><strong>Tests & s√©curit√© :</strong> Structure modulaire, tests √† venir</li>
          <li><strong>SEO & accessibilit√© :</strong> HTML s√©mantique, balises SEO, conception accessible</li>
          <li><strong>D√©ploiement :</strong> Local avec Vite, pr√©vu : Netlify/Vercel/Render</li>
          <li><strong>√Ä venir :</strong> Connexion API r√©elles, auth, back-office, th√®me sombre, i18n</li>
        </ul>
      </>
    ),
  },

  {
  id: "codebyme",
  title: "CodeByMe",
  description: "Plateforme collaborative de partage de code en Python avec Flask.",
  imgSrc: "/codeByMe.JPG",
  details: (
    <>
      <p>
        CodeByMe est une application web collaborative d√©velopp√©e en Python avec le micro-framework Flask. 
        Elle permet aux utilisateurs de partager, commenter et am√©liorer des extraits de code dans un espace commun.
      </p>
      <ul className="list-disc ml-5 space-y-2 text-sm mt-4">
        <li><strong>Framework Back-end :</strong> Python Flask</li>
        <li><strong>Base de donn√©es :</strong> SQLite (ou autre selon configuration)</li>
        <li><strong>Langages :</strong> Python, HTML, CSS, JavaScript</li>
        <li><strong>Fonctionnalit√©s :</strong> Authentification, cr√©ation et √©dition de snippets, commentaires, syst√®me de likes</li>
        <li><strong>API REST :</strong> Pour gestion des snippets et interactions utilisateurs</li>
        <li><strong>Front-end :</strong> Templates Jinja2, int√©gration JavaScript minimaliste</li>
        <li><strong>D√©ploiement :</strong> H√©bergement sur Render (ou autre), utilisation possible de Docker</li>
        <li><strong>S√©curit√© :</strong> Gestion des sessions, validation des formulaires, protection CSRF</li>
        <li><strong>√Ä venir :</strong> Edition collaborative en temps r√©el, notifications, th√®mes personnalis√©s</li>
      </ul>
    </>
  ),
},

];

export default function SectionProjets() {
  const [modalProjectId, setModalProjectId] = useState(null);

  const closeModal = () => setModalProjectId(null);

  const handleBackdropClick = (e) => {
    if (e.target.id === "modal-backdrop") closeModal();
  };

  const modalProject = projects.find((p) => p.id === modalProjectId);

  return (
    <section id="projects" className="w-full py-20 px-4 text-black bg-gray-100">
      <motion.div
        className="max-w-5xl mx-auto"
        initial={{ opacity: 0, y: 40 }}
        whileInView={{ opacity: 1, y: 0 }}
        viewport={{ once: true }}
        transition={{ duration: 0.8 }}
      >
        <h2 className="text-4xl font-bold mb-10 text-center">Mes Projets</h2>
        <p className="text-center text-gray-600 mb-12">Pr√©sentation de mes derni√®res exp√©riences.</p>

        <div className="grid sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
          {projects.map(({ id, title, description, imgSrc }) => (
            <div key={id} className="flex flex-col items-stretch h-full">
              <div className="flex flex-col bg-white rounded-lg shadow-md hover:shadow-lg transition duration-300 h-full">
                <div
                  onClick={() => setModalProjectId(id)}
                  className="cursor-pointer flex items-center justify-center h-[250px] bg-white rounded-t-md"
                >
                  <Image
                    src={imgSrc}
                    alt={title}
                    width={600}
                    height={400}
                    className="object-contain max-h-full mt-5 px-3"
                    priority={id === "easydealz"}
                  />
                </div>
                <div className="p-4 flex flex-col justify-between flex-grow text-center">
                  <h3 className="text-xl font-semibold mb-1">{title}</h3>
                  <p className="text-sm text-gray-700">{description}</p>
                </div>
              </div>
            </div>
          ))}
        </div>
      </motion.div>

      {/* MODALE AVEC TRANSITION */}
      <AnimatePresence>
        {modalProject && (
          <motion.div
            id="modal-backdrop"
            className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50"
            onClick={handleBackdropClick}
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            exit={{ opacity: 0 }}
            transition={{ duration: 0.3 }}
          >
            <motion.div
              className="bg-white max-w-3xl w-full rounded-lg p-6 relative overflow-y-auto max-h-[76vh]"
              initial={{ scale: 0.9, opacity: 0 }}
              animate={{ scale: 1, opacity: 1 }}
              exit={{ scale: 0.9, opacity: 0 }}
              transition={{ duration: 0.3 }}
            >
              <button
                className="absolute top-3 right-4 text-xl font-bold text-red-500 hover:text-red-700 transition"
                onClick={closeModal}
                aria-label="Fermer la modale"
              >
                ‚úï
              </button>
              <h2 className="text-2xl font-bold mb-4">
                üéØ Plus de d√©tails sur le projet {modalProject.title}
              </h2>

              {modalProject.imgSrc && (
                <div className="mb-6 flex justify-center">
                  <Image
                    src={modalProject.imgSrc}
                    alt={modalProject.title}
                    width={800}
                    height={500}
                    className="rounded-md object-contain max-h-[400px] w-auto"
                  />
                </div>
              )}

              {modalProject.details ? (
                modalProject.details
              ) : (
                <p>{modalProject.description}</p>
              )}
            </motion.div>
          </motion.div>
        )}
      </AnimatePresence>
    </section>
  );
}
